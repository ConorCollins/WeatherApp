@page "/forecast"
@inject WeatherService WeatherService

<h3 class="my-4 text-center">Weather Forecast</h3>

<div class="container">
    <div class="input-group mb-3">
        <input @bind="city" class="form-control" placeholder="Enter city name" />
        <button class="btn btn-primary" @onclick="GetForecast">Get Weather</button>
    </div>

    @if (forecastResponse != null)
    {
        <div>
            <h4 class="mt-4 text-center">Forecast for @forecastResponse.Location.Name, @forecastResponse.Location.Country</h4>
            <div class="row">
                @foreach (var forecastDay in forecastResponse.Forecast.Forecastday)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@forecastDay.Date</h5>
                                <p class="card-text">Max Temp: @forecastDay.Day.Maxtemp_c °C</p>
                                <p class="card-text">Min Temp: @forecastDay.Day.Mintemp_c °C</p>
                                <p class="card-text">Avg Temp: @forecastDay.Day.Avgtemp_c °C</p>
                                <p class="card-text">Max Wind: @forecastDay.Day.Maxwind_kph kph</p>
                                <p class="card-text">Humidity: @forecastDay.Day.Avghumidity %</p>
                                <p class="card-text">Total Precipitation: @forecastDay.Day.Totalprecip_mm mm</p>
                                <p class="card-text">Chance of Rain: @forecastDay.Day.Daily_chance_of_rain %</p>
                                <p class="card-text">Will it rain? @(forecastDay.Day.Daily_will_it_rain != 0 ? "Yes" : "No")</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else if (!string.IsNullOrWhiteSpace(errorMessage))
    {
        <div class="alert alert-danger mt-3">
            @errorMessage
        </div>
    }
</div>

@code {
    private string city;
    private ForecastResponse forecastResponse;
    private string errorMessage;

    private async Task GetForecast()
    {
        errorMessage = null; // Reset any previous error
        forecastResponse = await WeatherService.GetForecastAsync(city);

        if (forecastResponse == null)
        {
            errorMessage = "Could not retrieve weather data. Please check the city name or try again later.";
        }
    }
}
